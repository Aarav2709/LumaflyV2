name: Build

# Trigger on pushes and pull requests as before. The `release` job below checks
# for tag pushes and verifies the tag points to master before creating a GitHub
# Release (so releases only occur for tags like v4.0.0.0 pushed to master).
# Keep normal push and pull_request builds, and also trigger on semver-style tag pushes.
# We use branches: ['**'] to preserve push behavior on all branches and add a tags
# pattern to trigger workflows on tags like v4.0.0.0. The release job further
# verifies the tag is on master before creating a release.
on:
  push:
    branches: ["**"]
    tags:
      - "v*.*.*.*"
  pull_request:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      NUGET_CERT_REVOCATION_MODE: offline
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET for windows build
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Build
        run: |
          cd Lumafly
          dotnet publish -r win-x64 -p:PublishSingleFile=true -p:Configuration=Release --self-contained true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=embedded
          cd ..
      - name: Upload windows binary
        # NOTE: upgraded upload-artifact from v3 -> v4 to avoid deprecated action failures
        uses: actions/upload-artifact@v4
        with:
          name: Lumafly-Windows
          path: Lumafly/bin/Release/net7.0/win-x64/publish/

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET for linux build
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Build
        run: |
          cd Lumafly
          dotnet publish -r linux-x64 -p:PublishSingleFile=true -p:Configuration=Release --self-contained true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=embedded
          cd ..
          chmod +x Lumafly/bin/Release/net7.0/linux-x64/publish/Lumafly
          zip -jr linux.zip Lumafly/bin/Release/net7.0/linux-x64/publish/*
      - name: Upload linux binary
        # NOTE: upgraded upload-artifact from v3 -> v4 to avoid deprecated action failures
        uses: actions/upload-artifact@v4
        with:
          name: Lumafly-Linux
          path: linux.zip

  build-macos:
    runs-on: macos-latest
    env:
      NUGET_CERT_REVOCATION_MODE: offline
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET for macos build
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Build
        run: |
          cd Lumafly
          dotnet publish -r osx-x64 -p:PublishSingleFile=true -p:Configuration=Release --self-contained true
          cd ..
          cd Scripts
          python3 make_mac_app.py Lumafly.app ../Lumafly/bin/Release/net7.0/osx-x64/publish ../out
          cd ..
      - name: Upload macos binary
        # NOTE: upgraded upload-artifact from v3 -> v4 to avoid deprecated action failures
        uses: actions/upload-artifact@v4
        with:
          name: Lumafly-MacOS
          path: out/mac.zip

  # needs to run when releasing but before main release action
  build-auto-updater:
    # needs windows build for the exe to embed in the updater
    needs: [build-windows]
    runs-on: windows-latest
    env:
      NUGET_CERT_REVOCATION_MODE: offline

    if: startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET for AU build
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Restore dependencies
        run: dotnet restore -r win-x64
      - name: Build
        run: |
          cp ./artifacts/Lumafly-Windows/Lumafly.exe ./Lumafly.AU/Lumafly.exe
          cd Lumafly.AU
          dotnet publish -r win-x64 -c Release --self-contained true
          cd ..
      - name: Upload windows binary
        # NOTE: upgraded upload-artifact from v3 -> v4 to avoid deprecated action failures
        uses: actions/upload-artifact@v4
        with:
          name: Lumafly-AU
          path: Lumafly.AU/bin/Release/net7.0/win-x64/publish/

  release:
    needs: [build-macos, build-windows, build-linux, build-auto-updater]
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout repository (needed to verify tag ancestry)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Verify tag points to master
        id: verify_tag
        if: startsWith(github.ref, 'refs/tags')
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "Verifying tag: $TAG"
          # get the commit sha that the tag points to
          TAG_SHA=$(git rev-list -n 1 "refs/tags/${TAG}")
          echo "Tag sha: $TAG_SHA"
          # fetch remote master so we can check ancestry
          git fetch origin master
          if git merge-base --is-ancestor "$TAG_SHA" origin/master; then
            echo "on_master=true" >> $GITHUB_OUTPUT
            echo "Tag $TAG is on origin/master"
          else
            echo "on_master=false" >> $GITHUB_OUTPUT
            echo "Tag $TAG is NOT on origin/master"
          fi

      - name: Download artifacts
        if: steps.verify_tag.outputs.on_master == 'true'
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Zip files
        if: steps.verify_tag.outputs.on_master == 'true'
        run: |
          # Rename and package artifacts to the new branding 'LumaflyV2'.
          # Windows: zip the uploaded Windows publish folder and name it LumaflyV2-Windows.zip
          zip -jr LumaflyV2-Windows.zip ./artifacts/Lumafly-Windows/*

          # Main Windows executable renamed to LumaflyV2.exe for the release
          cp ./artifacts/Lumafly-Windows/Lumafly.exe ./LumaflyV2.exe

          # AU executable renamed to LumaflyV2.AU.exe
          cp ./artifacts/Lumafly-AU/Lumafly.AU.exe ./LumaflyV2.AU.exe

          # Linux and Mac were already zipped by their build jobs; move them and rename
          mv ./artifacts/Lumafly-Linux/linux.zip LumaflyV2-Linux.zip

          mv ./artifacts/Lumafly-MacOS/mac.zip LumaflyV2-MacOS.zip

      - name: Create release if a new tag is pushed
        if: steps.verify_tag.outputs.on_master == 'true'
        uses: softprops/action-gh-release@v1
        with:
          # Ensure the action can create a release using the repository token
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ./LumaflyV2.exe
            ./LumaflyV2.AU.exe
            ./LumaflyV2-Windows.zip
            ./LumaflyV2-MacOS.zip
            ./LumaflyV2-Linux.zip

  # run after release so no one downloads non existent files
  create-appcast:
    needs: [release]
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v3
      - name: Get tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Update appcast
        run: |
          python3 Scripts/make_appcast.py ${{ steps.vars.outputs.tag }}
          cat appcast.xml

      - name: Push updated appcast
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: master
          folder: .
          clean: true
          commit-message: Update appcast to ${{ steps.vars.outputs.tag }}
